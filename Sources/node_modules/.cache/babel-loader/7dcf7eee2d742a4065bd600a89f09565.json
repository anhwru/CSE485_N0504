{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\src\\\\Components\\\\Form.js\";\nimport React, { Component } from 'react'; // import './formik-demo.css';\n\nimport { render } from 'react-dom';\nimport { withFormik } from 'formik'; // import * as Yup from 'yup';\n\nimport classnames from 'classnames'; // import { MoreResources, DisplayFormikState } from './formik-demo';\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Form, _Component);\n\n  function Form() {\n    _classCallCheck(this, Form);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Form).apply(this, arguments));\n  }\n\n  _createClass(Form, [{\n    key: \"render\",\n    value: function render() {\n      var formikEnhancer = withFormik({\n        validationSchema: Yup.object().shape({\n          firstName: Yup.string().min(5, \"Vui lòng nhập tên đầy đủ\").required('Điền đủ trường này trươc khi đăng kí'),\n          lastName: Yup.string().min(30, \"Hãy nhập địa chỉ chi tiết hơn\").required('Điền đủ trường này trươc khi đăng kí'),\n          email: Yup.string().email('Bạn nhập địa chỉ gmail không đúng').required('Điền đủ trường này trươc khi đăng kí')\n        }),\n        mapPropsToValues: function mapPropsToValues(_ref) {\n          var user = _ref.user;\n          return _objectSpread({}, user);\n        },\n        handleSubmit: function handleSubmit(payload, _ref2) {\n          var setSubmitting = _ref2.setSubmitting;\n          alert(payload.email);\n          setSubmitting(false);\n        },\n        displayName: 'MyForm'\n      });\n\n      var InputFeedback = function InputFeedback(_ref3) {\n        var error = _ref3.error;\n        return error ? React.createElement(\"div\", {\n          className: \"input-feedback\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, error) : null;\n      };\n\n      var Label = function Label(_ref4) {\n        var error = _ref4.error,\n            className = _ref4.className,\n            children = _ref4.children,\n            props = _objectWithoutProperties(_ref4, [\"error\", \"className\", \"children\"]);\n\n        return React.createElement(\"label\", Object.assign({\n          className: \"label\"\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }), children);\n      };\n\n      var TextInput = function TextInput(_ref5) {\n        var type = _ref5.type,\n            id = _ref5.id,\n            label = _ref5.label,\n            error = _ref5.error,\n            value = _ref5.value,\n            onChange = _ref5.onChange,\n            className = _ref5.className,\n            props = _objectWithoutProperties(_ref5, [\"type\", \"id\", \"label\", \"error\", \"value\", \"onChange\", \"className\"]);\n\n        var classes = classnames('input-group', {\n          'animated shake error': !!error\n        }, className);\n        return React.createElement(\"div\", {\n          className: classes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(Label, {\n          htmlFor: id,\n          error: error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, label), React.createElement(\"input\", Object.assign({\n          id: id,\n          className: \"text-input\",\n          type: type,\n          value: value,\n          onChange: onChange\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        })), React.createElement(InputFeedback, {\n          error: error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }));\n      };\n\n      var MyForm = function MyForm(props) {\n        var values = props.values,\n            touched = props.touched,\n            errors = props.errors,\n            dirty = props.dirty,\n            handleChange = props.handleChange,\n            handleBlur = props.handleBlur,\n            handleSubmit = props.handleSubmit,\n            handleReset = props.handleReset,\n            isSubmitting = props.isSubmitting;\n        return React.createElement(\"form\", {\n          onSubmit: handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(TextInput, {\n          id: \"firstName\",\n          type: \"text\",\n          label: \"T\\xEAn \\u0111\\u1EA7y \\u0111\\u1EE7\",\n          placeholder: \"Fullnames\",\n          error: touched.firstName && errors.firstName,\n          value: values.firstName,\n          onChange: handleChange,\n          onBlur: handleBlur,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }), React.createElement(TextInput, {\n          id: \"lastName\",\n          type: \"text\",\n          label: \"\\u0110\\u1ECBa ch\\u1EC9\",\n          placeholder: \"Address\",\n          error: touched.lastName && errors.lastName,\n          value: values.lastName,\n          onChange: handleChange,\n          onBlur: handleBlur,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }), React.createElement(TextInput, {\n          id: \"email\",\n          type: \"email\",\n          label: \"\\u0110\\u1ECBa ch\\u1EC9 gmail\",\n          placeholder: \"Your Gmail\",\n          error: touched.email && errors.email,\n          value: values.email,\n          onChange: handleChange,\n          onBlur: handleBlur,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          type: \"button\",\n          className: \"outline\",\n          onClick: handleReset,\n          disabled: !dirty || isSubmitting,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"Reset\"), React.createElement(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, \"Submit\"));\n      };\n\n      var MyEnhancedForm = formikEnhancer(MyForm);\n\n      var App = function App() {\n        return React.createElement(\"div\", {\n          className: \"app\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, \" Vui l\\xF2ng \\u0111i\\u1EC1n \\u0111\\u1EA7y \\u0111\\u1EE7 c\\xE1c th\\xF4ng tn c\\u1EE7a b\\u1EA1n v\\xE0o c\\xE1c tr\\u01B0\\u1EDDng sau\"), React.createElement(MyEnhancedForm, {\n          user: {\n            email: '',\n            firstName: '',\n            lastName: ''\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }));\n      };\n\n      return React.createElement(App, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), document.getElementById('root');\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nexport default Form;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\mycompany\\src\\Components\\Form.js"],"names":["React","Component","render","withFormik","classnames","Form","formikEnhancer","validationSchema","Yup","object","shape","firstName","string","min","required","lastName","email","mapPropsToValues","user","handleSubmit","payload","setSubmitting","alert","displayName","InputFeedback","error","Label","className","children","props","TextInput","type","id","label","value","onChange","classes","MyForm","values","touched","errors","dirty","handleChange","handleBlur","handleReset","isSubmitting","MyEnhancedForm","App","document","getElementById"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n// import './formik-demo.css';\r\nimport { render } from 'react-dom';\r\nimport { withFormik } from 'formik';\r\n// import * as Yup from 'yup';\r\nimport classnames from 'classnames';\r\n// import { MoreResources, DisplayFormikState } from './formik-demo';\r\nclass Form extends Component {\r\n    render() {\r\n        const formikEnhancer = withFormik({\r\n            validationSchema: Yup.object().shape({\r\n                firstName: Yup.string()\r\n                    .min(5, \"Vui lòng nhập tên đầy đủ\")\r\n                    .required('Điền đủ trường này trươc khi đăng kí'),\r\n                lastName: Yup.string()\r\n                    .min(30, \"Hãy nhập địa chỉ chi tiết hơn\")\r\n                    .required('Điền đủ trường này trươc khi đăng kí'),\r\n                email: Yup.string()\r\n                    .email('Bạn nhập địa chỉ gmail không đúng')\r\n                    .required('Điền đủ trường này trươc khi đăng kí'),\r\n            }),\r\n\r\n            mapPropsToValues: ({ user }) => ({\r\n                ...user,\r\n            }),\r\n            handleSubmit: (payload, { setSubmitting }) => {\r\n                alert(payload.email);\r\n                setSubmitting(false);\r\n            },\r\n            displayName: 'MyForm',\r\n        });\r\n        const InputFeedback = ({ error }) =>\r\n            error ? <div className=\"input-feedback\">{error}</div> : null;\r\n        const Label = ({ error, className, children, ...props }) => {\r\n            return (\r\n                <label className=\"label\" {...props}>\r\n                    {children}\r\n                </label>\r\n            );\r\n        };\r\n\r\n        const TextInput = ({ type, id, label, error, value, onChange, className, ...props }) => {\r\n            const classes = classnames(\r\n                'input-group',\r\n                {\r\n                    'animated shake error': !!error,\r\n                },\r\n                className\r\n            );\r\n            return (\r\n                <div className={classes}>\r\n                    <Label htmlFor={id} error={error}>\r\n                        {label}\r\n                    </Label>\r\n                    <input\r\n                        id={id}\r\n                        className=\"text-input\"\r\n                        type={type}\r\n                        value={value}\r\n                        onChange={onChange}\r\n                        {...props}\r\n                    />\r\n                    <InputFeedback error={error} />\r\n                </div>\r\n            );\r\n        };\r\n        const MyForm = props => {\r\n            const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                dirty,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                handleReset,\r\n                isSubmitting,\r\n            } = props;\r\n            return (\r\n                <form onSubmit={handleSubmit}>\r\n                    <TextInput\r\n                        id=\"firstName\"\r\n                        type=\"text\"\r\n                        label=\"Tên đầy đủ\"\r\n                        placeholder=\"Fullnames\"\r\n                        error={touched.firstName && errors.firstName}\r\n                        value={values.firstName}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextInput\r\n                        id=\"lastName\"\r\n                        type=\"text\"\r\n                        label=\"Địa chỉ\"\r\n                        placeholder=\"Address\"\r\n                        error={touched.lastName && errors.lastName}\r\n                        value={values.lastName}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextInput\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        label=\"Địa chỉ gmail\"\r\n                        placeholder=\"Your Gmail\"\r\n                        error={touched.email && errors.email}\r\n                        value={values.email}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"outline\"\r\n                        onClick={handleReset}\r\n                        disabled={!dirty || isSubmitting}\r\n                    >\r\n                        Reset\r\n                    </button>\r\n                    <button type=\"submit\" disabled={isSubmitting}>\r\n                        Submit\r\n                    </button>\r\n\r\n                </form>\r\n            );\r\n        };\r\n\r\n        const MyEnhancedForm = formikEnhancer(MyForm);\r\n        const App = () => (\r\n            <div className=\"app\">\r\n                <h1> Vui lòng điền đầy đủ các thông tn của bạn vào các trường sau</h1>\r\n                <MyEnhancedForm user={{ email: '', firstName: '', lastName: '' }} />\r\n\r\n            </div>\r\n        );\r\n        return (\r\n\r\n\r\n\r\n\r\n        <App />, document.getElementById('root'));\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}