{"ast":null,"code":"import _classCallCheck from \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\src\\\\Components\\\\Form.js\";\nimport React, { Component } from 'react';\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport CheckButton from 'react-validation/build/button';\nimport { isEmail, isEmpty } from 'validator'; // import Cards from 'react-credit-cards';\n\nimport PhoneInput, { formatPhoneNumber, isValidPhoneNumber } from 'react-phone-number-input';\nimport 'react-phone-number-input/style.css';\nimport axios from 'axios'; // import { formatPhoneNumber } from 'react-phone-number-input'\n\nvar minname = function minname(value) {\n  if (value.trim().length < 3) {\n    return React.createElement(\"small\", {\n      className: \"form-text text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"T\\xEAn c\\u1EE7a b\\u1EA1n kh\\xF4ng h\\u1EE3p l\\u1EC7!\");\n  }\n};\n\nvar maxname = function maxname(value) {\n  if (value.trim().length > 40) {\n    return React.createElement(\"small\", {\n      className: \"form-text text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"T\\xEAn c\\u1EE7a b\\u1EA1n kh\\xF4ng h\\u1EE3p l\\u1EC7!\");\n  }\n};\n\nvar required = function required(value) {\n  if (isEmpty(value)) {\n    return React.createElement(\"small\", {\n      className: \"form-text text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"\\u0110\\xE2y l\\xE0 tr\\u01B0\\u1EDDng b\\u1EAFt bu\\u1ED9c!\");\n  }\n};\n\nvar email = function email(value) {\n  if (!isEmail(value)) {\n    return React.createElement(\"small\", {\n      className: \"form-text text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"B\\u1EA1n nh\\u1EADp kh\\xF4ng \\u0111\\xFAng \\u0111\\u1ECBnh d\\u1EA1ng!\");\n  }\n};\n\nvar minaddress = function minaddress(value) {\n  if (value.trim().length < 30) {\n    return React.createElement(\"small\", {\n      className: \"form-text text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Vui l\\xF2ng m\\xF4 t\\u1EA3 \\u0111\\u1ECBa ch\\u1EC9 chi ti\\u1EBFt h\\u01A1n\");\n  }\n};\n\nvar minvalue = function minvalue(value) {\n  if (value.trim().length < 12) {\n    return React.createElement(\"small\", {\n      className: \"form-text text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"B\\u1EA1n nh\\u1EADp thi\\u1EBFu s\\u1ED1 TK. Vui l\\xF2ng xem l\\u1EA1i!\");\n  }\n};\n\nvar maxvalue = function maxvalue(value) {\n  if (value.trim().length > 15) {\n    return React.createElement(\"small\", {\n      className: \"form-text text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"S\\u1ED1 t\\xE0i kho\\u1EA3n kh\\xF4ng ch\\xEDnh x\\xE1c!\");\n  }\n};\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.removeApiError = function () {\n      _this.form.hideError(_this.userInput);\n    };\n\n    _this.state = {\n      yourname: '',\n      email: '',\n      address: '',\n      phonenumber: '',\n      atm: ''\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      this.form.validateAll();\n      console.log(this.state);\n      axios.post('http://localhost:3001/mail', this.state);\n\n      if (this.checkBtn.context._errors.length === 0) {\n        alert('Check mail để lấy mã xác nhận');\n      }\n    } // if (value) {\n    //     // `format` can be \"National\" or \"International\".\n    //     formatPhoneNumber(value, \"International\")\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var value = this.state.value;\n      return React.createElement(\"div\", {\n        className: \"container ctnform\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Vui l\\xF2ng \\u0111i\\u1EC1n \\u0111\\u1EA7y \\u0111\\u1EE7 v\\xE0 ch\\xEDnh x\\xE1c c\\xE1c th\\xF4ng tin v\\u1EC1 b\\u1EA1n!\"), React.createElement(\"div\", {\n        className: \"login-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"output\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"form-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Form, {\n        ref: function ref(c) {\n          _this2.form = c;\n        },\n        onSubmit: this.handleSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Input, {\n        name: \"yourname\",\n        value: this.state.name,\n        onChange: function onChange(value) {\n          return _this2.setState({\n            yourname: value\n          });\n        },\n        type: \"text\",\n        placeholder: \"T\\xEAn \\u0111\\u1EA7y \\u0111\\u1EE7\",\n        className: \"form-control\",\n        validations: [required, minname, maxname],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"email\",\n        value: this.state.email,\n        onChange: function onChange(value) {\n          return _this2.setState({\n            email: value\n          });\n        },\n        type: \"text\",\n        placeholder: \"Email\",\n        className: \"form-control\",\n        validations: [required, email],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(PhoneInput, {\n        name: \"phonenumber\",\n        placeholder: \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\",\n        onChange: function onChange(value) {\n          return _this2.setState({\n            phonenumber: value\n          });\n        },\n        error: value ? isValidPhoneNumber(value) ? undefined : 'Số điện thoại không đúng!' : 'Đây là trường bắt buộc!',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"address\",\n        value: this.state.address,\n        onChange: function onChange(value) {\n          return _this2.setState({\n            address: value\n          });\n        },\n        type: \"text\",\n        placeholder: \"\\u0110\\u1ECBa ch\\u1EC9\",\n        className: \"form-control\",\n        validations: [required, minaddress],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"atm\",\n        value: this.state.atm,\n        onFocus: this.removeApiError,\n        ref: function ref(c) {\n          _this2.userInput = c;\n        },\n        type: \"text\",\n        placeholder: \"S\\u1ED1 t\\xE0i kho\\u1EA3n\",\n        className: \"form-control\",\n        validations: [required, minvalue, maxvalue],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-info btn-block login\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"G\\u1EEDi \\u0111i\"), React.createElement(CheckButton, {\n        style: {\n          display: 'none'\n        },\n        ref: function ref(c) {\n          _this2.checkBtn = c;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default Login;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\mycompany\\src\\Components\\Form.js"],"names":["React","Component","Form","Input","CheckButton","isEmail","isEmpty","PhoneInput","formatPhoneNumber","isValidPhoneNumber","axios","minname","value","trim","length","maxname","required","email","minaddress","minvalue","maxvalue","Login","props","removeApiError","form","hideError","userInput","state","yourname","address","phonenumber","atm","e","preventDefault","validateAll","console","log","post","checkBtn","context","_errors","alert","c","handleSubmit","bind","name","setState","undefined","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Form from 'react-validation/build/form';\r\nimport Input from 'react-validation/build/input';\r\nimport CheckButton from 'react-validation/build/button';\r\nimport { isEmail, isEmpty } from 'validator';\r\n// import Cards from 'react-credit-cards';\r\nimport PhoneInput, { formatPhoneNumber, isValidPhoneNumber } from 'react-phone-number-input'\r\nimport 'react-phone-number-input/style.css';\r\nimport axios from 'axios';\r\n// import { formatPhoneNumber } from 'react-phone-number-input'\r\n\r\n\r\nconst minname = (value) => {\r\n    if (value.trim().length < 3) {\r\n        return <small className=\"form-text text-danger\">Tên của bạn không hợp lệ!</small>;\r\n    }\r\n};\r\nconst maxname = (value) => {\r\n    if (value.trim().length >40) {\r\n        return <small className=\"form-text text-danger\">Tên của bạn không hợp lệ!</small>;\r\n    }\r\n};\r\nconst required = (value) => {\r\n    if (isEmpty(value)) {\r\n        return <small className=\"form-text text-danger\">Đây là trường bắt buộc!</small>;\r\n    }\r\n};\r\n\r\nconst email = (value) => {\r\n    if (!isEmail(value)) {\r\n        return <small className=\"form-text text-danger\">Bạn nhập không đúng định dạng!</small>;\r\n    }\r\n};\r\n\r\nconst minaddress = (value) => {\r\n    if (value.trim().length < 30) {\r\n        return <small className=\"form-text text-danger\">Vui lòng mô tả địa chỉ chi tiết hơn</small>;\r\n    }\r\n};\r\n\r\nconst minvalue = (value) => {\r\n    if (value.trim().length < 12) {\r\n        return <small className=\"form-text text-danger\">Bạn nhập thiếu số TK. Vui lòng xem lại!</small>;\r\n    }\r\n};\r\nconst maxvalue = (value) => {\r\n    if (value.trim().length > 15) {\r\n        return <small className=\"form-text text-danger\">Số tài khoản không chính xác!</small>;\r\n    }\r\n};\r\nclass Login extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            yourname : '',\r\n            email : '',\r\n            address : '',\r\n            phonenumber:'',\r\n            atm:''\r\n        };\r\n\r\n    }\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        this.form.validateAll();\r\n        console.log(this.state);\r\n        axios.post('http://localhost:3001/mail',this.state);\r\n        if ( this.checkBtn.context._errors.length === 0 ) {\r\n            alert('Check mail để lấy mã xác nhận');\r\n        }\r\n    }\r\n    // if (value) {\r\n    //     // `format` can be \"National\" or \"International\".\r\n    //     formatPhoneNumber(value, \"International\")\r\n    // }\r\n    removeApiError = () => {\r\n        this.form.hideError(this.userInput);\r\n    };\r\n    render() {\r\n        const {value}= this.state;\r\n        return (\r\n            <div className=\"container ctnform\">\r\n                <h2 className=\"text-center\">Vui lòng điền đầy đủ và chính xác các thông tin về bạn!</h2>\r\n                <div className=\"login-container\">\r\n                    <div id=\"output\"></div>\r\n                    <div className=\"avatar\"></div>\r\n                    <div className=\"form-box\">\r\n                        <Form ref={c => { this.form = c }} onSubmit={this.handleSubmit.bind(this)}>\r\n                            <Input\r\n                                name=\"yourname\"\r\n                                value={this.state.name}\r\n                                onChange={value => this.setState({yourname:value})}\r\n                                type=\"text\"\r\n                                placeholder=\"Tên đầy đủ\"\r\n                                className=\"form-control\"\r\n                                validations={[required,minname, maxname]}\r\n                            />\r\n                            <Input\r\n                                name=\"email\"\r\n                                value={this.state.email}\r\n                                onChange={value => this.setState({email:value})}\r\n                                type=\"text\"\r\n                                placeholder=\"Email\"\r\n                                className=\"form-control\"\r\n                                validations={[required, email]}\r\n                            />\r\n                            <PhoneInput\r\n                                name=\"phonenumber\"\r\n                                placeholder=\"Số điện thoại\"\r\n                                onChange={value => this.setState({phonenumber:value})}\r\n                                error={ value ? (isValidPhoneNumber(value) ? undefined : 'Số điện thoại không đúng!') : 'Đây là trường bắt buộc!' }/>\r\n                            <Input\r\n                                name=\"address\"\r\n                                value={this.state.address}\r\n                                onChange={value => this.setState({address:value})}\r\n                                type=\"text\"\r\n                                placeholder=\"Địa chỉ\"\r\n                                className=\"form-control\"\r\n                                validations={[required, minaddress]}\r\n                            />\r\n                            <Input\r\n                                name=\"atm\"\r\n                                value={this.state.atm}\r\n                                onFocus={this.removeApiError}\r\n                                ref={c => { this.userInput = c }}\r\n                                type=\"text\"\r\n                                placeholder=\"Số tài khoản\"\r\n                                className=\"form-control\"\r\n                                validations={[required, minvalue, maxvalue]}\r\n                            />\r\n                            <button className=\"btn btn-info btn-block login\" type=\"submit\">Gửi đi</button>\r\n                            <CheckButton style={{ display: 'none' }} ref={c => { this.checkBtn = c }} />\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}