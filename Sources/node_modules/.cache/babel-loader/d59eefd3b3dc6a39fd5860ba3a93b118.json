{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\src\\\\Components\\\\Form.js\";\nimport './formik-demo.css';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport classnames from 'classnames'; // Helper for the demo\n\nimport { MoreResources, DisplayFormikState } from './formik-demo';\nvar formikEnhancer = withFormik({\n  validationSchema: Yup.object().shape({\n    firstName: Yup.string().min(5, \"Vui lòng nhập tên đầy đủ\").required('Điền đủ trường này trươc khi đăng kí'),\n    address: Yup.string().min(30, \"Hãy nhập địa chỉ chi tiết hơn\").required('Điền đủ trường này trươc khi đăng kí'),\n    email: Yup.string().email('Bạn nhập địa chỉ gmail không đúng').required('Điền đủ trường này trươc khi đăng kí')\n  }),\n  mapPropsToValues: function mapPropsToValues(_ref) {\n    var user = _ref.user;\n    return _objectSpread({}, user);\n  },\n  handleSubmit: function handleSubmit(payload, _ref2) {\n    var setSubmitting = _ref2.setSubmitting;\n    alert(payload.email);\n    setSubmitting(false);\n  },\n  displayName: 'MyForm'\n});\n\nvar InputFeedback = function InputFeedback(_ref3) {\n  var error = _ref3.error;\n  return error ? React.createElement(\"div\", {\n    className: \"input-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, error) : null;\n};\n\nvar Label = function Label(_ref4) {\n  var error = _ref4.error,\n      className = _ref4.className,\n      children = _ref4.children,\n      props = _objectWithoutProperties(_ref4, [\"error\", \"className\", \"children\"]);\n\n  return React.createElement(\"label\", Object.assign({\n    className: \"label\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), children);\n};\n\nvar TextInput = function TextInput(_ref5) {\n  var type = _ref5.type,\n      id = _ref5.id,\n      label = _ref5.label,\n      error = _ref5.error,\n      value = _ref5.value,\n      onChange = _ref5.onChange,\n      className = _ref5.className,\n      props = _objectWithoutProperties(_ref5, [\"type\", \"id\", \"label\", \"error\", \"value\", \"onChange\", \"className\"]);\n\n  var classes = classnames('input-group', {\n    'animated shake error': !!error\n  }, className);\n  return React.createElement(\"div\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Label, {\n    htmlFor: id,\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, label), React.createElement(\"input\", Object.assign({\n    id: id,\n    className: \"text-input\",\n    type: type,\n    value: value,\n    onChange: onChange\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(InputFeedback, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }));\n};\n\nvar MyForm = function MyForm(props) {\n  var values = props.values,\n      touched = props.touched,\n      errors = props.errors,\n      dirty = props.dirty,\n      handleChange = props.handleChange,\n      handleBlur = props.handleBlur,\n      handleSubmit = props.handleSubmit,\n      handleReset = props.handleReset,\n      isSubmitting = props.isSubmitting;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    id: \"firstName\",\n    type: \"text\",\n    label: \"T\\xEAn \\u0111\\u1EA7y \\u0111\\u1EE7\",\n    placeholder: \"Fullnames\",\n    error: touched.firstName && errors.firstName,\n    value: values.firstName,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(TextInput, {\n    id: \"address\",\n    type: \"text\",\n    label: \"\\u0110\\u1ECBa ch\\u1EC9\",\n    placeholder: \"Address\",\n    error: touched.address && errors.address,\n    value: values.address,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(TextInput, {\n    id: \"email\",\n    type: \"email\",\n    label: \"\\u0110\\u1ECBa ch\\u1EC9 gmail\",\n    placeholder: \"Your Gmail\",\n    error: touched.email && errors.email,\n    value: values.email,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"outline\",\n    onClick: handleReset,\n    disabled: !dirty || isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Reset\"), React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nvar MyEnhancedForm = formikEnhancer(MyForm);\n\nvar App = function App() {\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \" Vui l\\xF2ng \\u0111i\\u1EC1n \\u0111\\u1EA7y \\u0111\\u1EE7 c\\xE1c th\\xF4ng tn c\\u1EE7a b\\u1EA1n v\\xE0o c\\xE1c tr\\u01B0\\u1EDDng sau\"), React.createElement(MyEnhancedForm, {\n    user: {\n      email: '',\n      firstName: '',\n      address: ''\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }));\n};\n\nrender(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 141\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:\\xampp\\htdocs\\mycompany\\src\\Components\\Form.js"],"names":["React","render","withFormik","Yup","classnames","MoreResources","DisplayFormikState","formikEnhancer","validationSchema","object","shape","firstName","string","min","required","address","email","mapPropsToValues","user","handleSubmit","payload","setSubmitting","alert","displayName","InputFeedback","error","Label","className","children","props","TextInput","type","id","label","value","onChange","classes","MyForm","values","touched","errors","dirty","handleChange","handleBlur","handleReset","isSubmitting","MyEnhancedForm","App","document","getElementById"],"mappings":"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","sourcesContent":["import './formik-demo.css';\r\nimport React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport classnames from 'classnames';\r\n// Helper for the demo\r\nimport { MoreResources, DisplayFormikState } from './formik-demo';\r\n\r\nconst formikEnhancer = withFormik({\r\n    validationSchema: Yup.object().shape({\r\n        firstName: Yup.string()\r\n            .min(5, \"Vui lòng nhập tên đầy đủ\")\r\n            .required('Điền đủ trường này trươc khi đăng kí'),\r\n        address: Yup.string()\r\n            .min(30, \"Hãy nhập địa chỉ chi tiết hơn\")\r\n            .required('Điền đủ trường này trươc khi đăng kí'),\r\n        email: Yup.string()\r\n            .email('Bạn nhập địa chỉ gmail không đúng')\r\n            .required('Điền đủ trường này trươc khi đăng kí'),\r\n    }),\r\n\r\n    mapPropsToValues: ({ user }) => ({\r\n        ...user,\r\n    }),\r\n    handleSubmit: (payload, { setSubmitting }) => {\r\n        alert(payload.email);\r\n        setSubmitting(false);\r\n    },\r\n    displayName: 'MyForm',\r\n});\r\n\r\nconst InputFeedback = ({ error }) =>\r\n    error ? <div className=\"input-feedback\">{error}</div> : null;\r\n\r\nconst Label = ({ error, className, children, ...props }) => {\r\n    return (\r\n        <label className=\"label\" {...props}>\r\n            {children}\r\n        </label>\r\n    );\r\n};\r\n\r\nconst TextInput = ({ type, id, label, error, value, onChange, className, ...props }) => {\r\n    const classes = classnames(\r\n        'input-group',\r\n        {\r\n            'animated shake error': !!error,\r\n        },\r\n        className\r\n    );\r\n    return (\r\n        <div className={classes}>\r\n            <Label htmlFor={id} error={error}>\r\n                {label}\r\n            </Label>\r\n            <input\r\n                id={id}\r\n                className=\"text-input\"\r\n                type={type}\r\n                value={value}\r\n                onChange={onChange}\r\n                {...props}\r\n            />\r\n            <InputFeedback error={error} />\r\n        </div>\r\n    );\r\n};\r\nconst MyForm = props => {\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        dirty,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        handleReset,\r\n        isSubmitting,\r\n    } = props;\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <TextInput\r\n                id=\"firstName\"\r\n                type=\"text\"\r\n                label=\"Tên đầy đủ\"\r\n                placeholder=\"Fullnames\"\r\n                error={touched.firstName && errors.firstName}\r\n                value={values.firstName}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n            />\r\n            <TextInput\r\n                id=\"address\"\r\n                type=\"text\"\r\n                label=\"Địa chỉ\"\r\n                placeholder=\"Address\"\r\n                error={touched.address && errors.address}\r\n                value={values.address}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n            />\r\n            <TextInput\r\n                id=\"email\"\r\n                type=\"email\"\r\n                label=\"Địa chỉ gmail\"\r\n                placeholder=\"Your Gmail\"\r\n                error={touched.email && errors.email}\r\n                value={values.email}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n            />\r\n            <button\r\n                type=\"button\"\r\n                className=\"outline\"\r\n                onClick={handleReset}\r\n                disabled={!dirty || isSubmitting}\r\n            >\r\n                Reset\r\n            </button>\r\n            <button type=\"submit\" disabled={isSubmitting}>\r\n                Submit\r\n            </button>\r\n\r\n        </form>\r\n    );\r\n};\r\n\r\nconst MyEnhancedForm = formikEnhancer(MyForm);\r\n\r\n\r\n\r\nconst App = () => (\r\n    <div className=\"app\">\r\n        <h1> Vui lòng điền đầy đủ các thông tn của bạn vào các trường sau</h1>\r\n        <MyEnhancedForm user={{ email: '', firstName: '', address: '' }} />\r\n\r\n    </div>\r\n);\r\n\r\nrender(<App />, document.getElementById('root'));\r\n"]},"metadata":{},"sourceType":"module"}