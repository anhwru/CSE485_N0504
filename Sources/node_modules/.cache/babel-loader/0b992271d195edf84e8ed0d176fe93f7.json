{"ast":null,"code":"import _classCallCheck from \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\src\\\\Components\\\\Form.js\";\nimport React, { Component } from 'react';\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport CheckButton from 'react-validation/build/button';\nimport { isEmail, isEmpty } from 'validator';\n\nvar required = function required(value) {\n  if (isEmpty(value)) {\n    return React.createElement(\"small\", {\n      className: \"form-text text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, \"This field is required\");\n  }\n};\n\nvar email = function email(value) {\n  if (!isEmail(value)) {\n    return React.createElement(\"small\", {\n      className: \"form-text text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Invalid email format\");\n  }\n};\n\nvar minLength = function minLength(value) {\n  if (value.trim().length < 6) {\n    return React.createElement(\"small\", {\n      className: \"form-text text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Password must be at least 6 characters long\");\n  }\n};\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n    _this.state = {\n      email: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      this.form.validateAll();\n\n      if (this.checkBtn.context._errors.length === 0) {\n        console.log(this.state.email);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"output\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"form-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: function onSubmit(e) {\n          return _this2.onSubmit(e);\n        },\n        ref: function ref(c) {\n          _this2.form = c;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Input, {\n        name: \"email\",\n        onChange: this.onChangeHandler,\n        type: \"text\",\n        placeholder: \"Email\",\n        className: \"form-control\",\n        validations: [required, email],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"password\",\n        onChange: this.onChangeHandler,\n        type: \"password\",\n        placeholder: \"Password\",\n        className: \"form-control\",\n        validations: [required, minLength],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-info btn-block login\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Login\"), React.createElement(CheckButton, {\n        style: {\n          display: 'none'\n        },\n        ref: function ref(c) {\n          _this2.checkBtn = c;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default Login;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\mycompany\\src\\Components\\Form.js"],"names":["React","Component","Form","Input","CheckButton","isEmail","isEmpty","required","value","email","minLength","trim","length","Login","props","state","password","e","preventDefault","form","validateAll","checkBtn","context","_errors","console","log","onSubmit","c","onChangeHandler","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Form from 'react-validation/build/form';\r\nimport Input from 'react-validation/build/input';\r\nimport CheckButton from 'react-validation/build/button';\r\nimport { isEmail, isEmpty } from 'validator';\r\n\r\nconst required = (value) => {\r\n    if (isEmpty(value)) {\r\n        return <small className=\"form-text text-danger\">This field is required</small>;\r\n    }\r\n}\r\n\r\nconst email = (value) => {\r\n    if (!isEmail(value)) {\r\n        return <small className=\"form-text text-danger\">Invalid email format</small>;\r\n    }\r\n}\r\n\r\nconst minLength = (value) => {\r\n    if (value.trim().length < 6) {\r\n        return <small className=\"form-text text-danger\">Password must be at least 6 characters long</small>;\r\n    }\r\n}\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email : '',\r\n            password: '',\r\n        };\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        this.form.validateAll();\r\n\r\n        if ( this.checkBtn.context._errors.length === 0 ) {\r\n            console.log(this.state.email);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"login-container\">\r\n                    <div id=\"output\"></div>\r\n                    <div className=\"avatar\"></div>\r\n                    <div className=\"form-box\">\r\n                        <Form onSubmit={e => this.onSubmit(e)} ref={c => { this.form = c }}>\r\n                            <Input\r\n                                name=\"email\"\r\n                                onChange={this.onChangeHandler}\r\n                                type=\"text\"\r\n                                placeholder=\"Email\"\r\n                                className=\"form-control\"\r\n                                validations={[required, email]}\r\n                            />\r\n                            <Input\r\n                                name=\"password\"\r\n                                onChange={this.onChangeHandler}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                className=\"form-control\"\r\n                                validations={[required, minLength]}\r\n                            />\r\n                            <button className=\"btn btn-info btn-block login\" type=\"submit\">Login</button>\r\n                            <CheckButton style={{ display: 'none' }} ref={c => { this.checkBtn = c }} />\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}