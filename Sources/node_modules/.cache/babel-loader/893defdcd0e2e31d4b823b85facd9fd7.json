{"ast":null,"code":"import _classCallCheck from \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\mycompany\\\\src\\\\Components\\\\Form.js\";\nimport React, { Component } from 'react';\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport CheckButton from 'react-validation/build/button';\nimport { isEmail, isEmpty } from 'validator';\n\nvar minname = function minname(value) {\n  if (value.trim().length < 3) {\n    return React.createElement(\"small\", {\n      className: \"form-text text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, \"T\\xEAn c\\u1EE7a b\\u1EA1n kh\\xF4ng h\\u1EE3p l\\u1EC7!\");\n  }\n};\n\nvar maxname = function maxname(value) {\n  if (value.trim().length < 30) {\n    return React.createElement(\"small\", {\n      className: \"form-text text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"T\\xEAn c\\u1EE7a b\\u1EA1n kh\\xF4ng h\\u1EE3p l\\u1EC7!\");\n  }\n};\n\nvar required = function required(value) {\n  if (isEmpty(value)) {\n    return React.createElement(\"small\", {\n      className: \"form-text text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"\\u0110\\xE2y l\\xE0 tr\\u01B0\\u1EDDng b\\u1EAFt bu\\u1ED9c!\");\n  }\n};\n\nvar email = function email(value) {\n  if (!isEmail(value)) {\n    return React.createElement(\"small\", {\n      className: \"form-text text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"B\\u1EA1n nh\\u1EADp kh\\xF4ng \\u0111\\xFAng \\u0111\\u1ECBnh d\\u1EA1ng!\");\n  }\n};\n\nvar minaddress = function minaddress(value) {\n  if (value.trim().length < 30) {\n    return React.createElement(\"small\", {\n      className: \"form-text text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Vui l\\xF2ng m\\xF4 t\\u1EA3 \\u0111\\u1ECBa ch\\u1EC9 chi ti\\u1EBFt h\\u01A1n\");\n  }\n};\n\nvar minphone = function minphone(value) {\n  if (value.trim().length < 10) {\n    return React.createElement(\"small\", {\n      className: \"form-text text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Vui l\\xF2ng ki\\u1EC3m tra l\\u1EA1i s\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\");\n  }\n};\n\nvar maxphone = function maxphone(value) {\n  if (value.trim().length > 10) {\n    return React.createElement(\"small\", {\n      className: \"form-text text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"B\\u1EADn \\u0111\\xE3 nh\\u1EADp th\\u1EEBa s\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\");\n  }\n};\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n    _this.state = {\n      yourname: '',\n      email: '',\n      phonenumber: '',\n      address: ''\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      this.form.validateAll();\n\n      if (this.checkBtn.context._errors.length === 0) {\n        alert('success');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"output\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"form-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: function onSubmit(e) {\n          return _this2.onSubmit(e);\n        },\n        ref: function ref(c) {\n          _this2.form = c;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Input, {\n        name: \"yourname\",\n        onChange: this.onChangeHandler,\n        type: \"text\",\n        placeholder: \"T\\xEAn \\u0111\\u1EA7y \\u0111\\u1EE7\",\n        className: \"form-control\",\n        validations: [required, minname, maxname],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"email\",\n        onChange: this.onChangeHandler,\n        type: \"text\",\n        placeholder: \"Email\",\n        className: \"form-control\",\n        validations: [required, email],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"phonenumber\",\n        onChange: this.onChangeHandler,\n        type: \"tel\",\n        placeholder: \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\",\n        className: \"form-control\",\n        validations: [required, minphone, maxphone],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"address\",\n        onChange: this.onChangeHandler,\n        type: \"text\",\n        placeholder: \"\\u0110\\u1ECBa ch\\u1EC9\",\n        className: \"form-control\",\n        validations: [required, minaddress],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-info btn-block login\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Login\"), React.createElement(CheckButton, {\n        style: {\n          display: 'none'\n        },\n        ref: function ref(c) {\n          _this2.checkBtn = c;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default Login;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\mycompany\\src\\Components\\Form.js"],"names":["React","Component","Form","Input","CheckButton","isEmail","isEmpty","minname","value","trim","length","maxname","required","email","minaddress","minphone","maxphone","Login","props","state","yourname","phonenumber","address","e","preventDefault","form","validateAll","checkBtn","context","_errors","alert","onSubmit","c","onChangeHandler","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Form from 'react-validation/build/form';\r\nimport Input from 'react-validation/build/input';\r\nimport CheckButton from 'react-validation/build/button';\r\nimport { isEmail, isEmpty } from 'validator';\r\nconst minname = (value) => {\r\n    if (value.trim().length < 3) {\r\n        return <small className=\"form-text text-danger\">Tên của bạn không hợp lệ!</small>;\r\n    }\r\n};\r\nconst maxname = (value) => {\r\n    if (value.trim().length < 30) {\r\n        return <small className=\"form-text text-danger\">Tên của bạn không hợp lệ!</small>;\r\n    }\r\n};\r\nconst required = (value) => {\r\n    if (isEmpty(value)) {\r\n        return <small className=\"form-text text-danger\">Đây là trường bắt buộc!</small>;\r\n    }\r\n};\r\n\r\nconst email = (value) => {\r\n    if (!isEmail(value)) {\r\n        return <small className=\"form-text text-danger\">Bạn nhập không đúng định dạng!</small>;\r\n    }\r\n};\r\n\r\nconst minaddress = (value) => {\r\n    if (value.trim().length < 30) {\r\n        return <small className=\"form-text text-danger\">Vui lòng mô tả địa chỉ chi tiết hơn</small>;\r\n    }\r\n};\r\nconst minphone = (value) => {\r\n    if (value.trim().length < 10) {\r\n        return <small className=\"form-text text-danger\">Vui lòng kiểm tra lại số điện thoại</small>;\r\n    }\r\n};\r\nconst maxphone = (value) => {\r\n    if (value.trim().length > 10) {\r\n        return <small className=\"form-text text-danger\">Bận đã nhập thừa số điện thoại</small>;\r\n    }\r\n};\r\nclass Login extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            yourname : '',\r\n            email : '',\r\n            phonenumber : '',\r\n            address : '',\r\n\r\n        };\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        this.form.validateAll();\r\n\r\n        if ( this.checkBtn.context._errors.length === 0 ) {\r\n            alert('success');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"login-container\">\r\n                    <div id=\"output\"></div>\r\n                    <div className=\"avatar\"></div>\r\n                    <div className=\"form-box\">\r\n                        <Form onSubmit={e => this.onSubmit(e)} ref={c => { this.form = c }}>\r\n                            <Input\r\n                                name=\"yourname\"\r\n                                onChange={this.onChangeHandler}\r\n                                type=\"text\"\r\n                                placeholder=\"Tên đầy đủ\"\r\n                                className=\"form-control\"\r\n                                validations={[required,minname, maxname]}\r\n                            />\r\n                            <Input\r\n                                name=\"email\"\r\n                                onChange={this.onChangeHandler}\r\n                                type=\"text\"\r\n                                placeholder=\"Email\"\r\n                                className=\"form-control\"\r\n                                validations={[required, email]}\r\n                            />\r\n                            <Input\r\n                                name=\"phonenumber\"\r\n                                onChange={this.onChangeHandler}\r\n                                type=\"tel\"\r\n                                placeholder=\"Số điện thoại\"\r\n                                className=\"form-control\"\r\n                                validations={[required, minphone, maxphone]}\r\n                            />\r\n                            <Input\r\n                                name=\"address\"\r\n                                onChange={this.onChangeHandler}\r\n                                type=\"text\"\r\n                                placeholder=\"Địa chỉ\"\r\n                                className=\"form-control\"\r\n                                validations={[required, minaddress]}\r\n                            />\r\n                            <button className=\"btn btn-info btn-block login\" type=\"submit\">Login</button>\r\n                            <CheckButton style={{ display: 'none' }} ref={c => { this.checkBtn = c }} />\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}